# Generated by Django 5.1.4 on 2025-01-23 03:11

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Idea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('patent_number', models.CharField(blank=True, max_length=100, null=True)),
                ('brief_description', models.TextField()),
                ('application_number', models.CharField(blank=True, max_length=100, null=True)),
                ('problem_statement', models.TextField()),
                ('solution', models.TextField()),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], max_length=10)),
                ('details', models.TextField(blank=True, null=True)),
                ('fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('category', models.CharField(max_length=100)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='idea_photos/')),
                ('video', models.FileField(blank=True, null=True, upload_to='idea_videos/')),
                ('team_info', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('individual', 'Individual'), ('company', 'Company')], default='company', max_length=10)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('company_website', models.URLField(blank=True, null=True)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('company_size', models.CharField(blank=True, max_length=20, null=True)),
                ('company_type', models.CharField(blank=True, max_length=255, null=True)),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('bcommune_profile', models.URLField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('about_company', models.TextField(blank=True, null=True)),
                ('founding_year', models.PositiveIntegerField(blank=True, null=True)),
                ('headquarters', models.CharField(blank=True, max_length=255, null=True)),
                ('branches', models.TextField(blank=True, null=True)),
                ('business_registration_number', models.CharField(blank=True, max_length=100, null=True)),
                ('legal_structure', models.CharField(blank=True, choices=[('LLP', 'LLP'), ('Pvt Ltd', 'Private Limited'), ('Partnership', 'Partnership'), ('Sole Proprietorship', 'Sole Proprietorship'), ('Others', 'Others')], max_length=50, null=True)),
                ('core_services', models.TextField(blank=True, null=True)),
                ('social_media_links', models.JSONField(blank=True, default=dict)),
                ('portfolio', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CoreOpportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opportunity_title', models.CharField(max_length=200)),
                ('role_details', models.TextField()),
                ('responsibilities', models.TextField()),
                ('key_objectives', models.TextField()),
                ('expertise', models.CharField(max_length=200)),
                ('benefits', models.TextField()),
                ('opportunity_type', models.CharField(choices=[('Co-Founder Role', 'Co-Founder Role'), ('Advisor', 'Advisor'), ('Investor Partnership', 'Investor Partnership'), ('Team Member', 'Team Member'), ('Other', 'Other')], max_length=50)),
                ('industry', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('stage', models.CharField(choices=[('Idea', 'Idea'), ('Building', 'Building'), ('MVP', 'MVP'), ('Funded', 'Funded')], max_length=50)),
                ('company_mission', models.TextField()),
                ('requirements', models.CharField(max_length=200)),
                ('compensation', models.CharField(choices=[('Equity-Based', 'Equity-Based'), ('Paid Opportunity', 'Paid Opportunity'), ('Other', 'Other')], max_length=50)),
                ('equity_percentage', models.FloatField(blank=True, null=True)),
                ('other_compensation', models.CharField(blank=True, max_length=200, null=True)),
                ('salary', models.CharField(blank=True, max_length=100, null=True)),
                ('experience', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, choices=[('Remote', 'Remote'), ('Hybrid', 'Hybrid'), ('Onsite', 'Onsite')], max_length=50, null=True)),
                ('location_details', models.CharField(blank=True, max_length=200, null=True)),
                ('commitment', models.CharField(choices=[('Full-Time', 'Full-Time'), ('Part-Time', 'Part-Time'), ('Intern', 'Intern')], max_length=50)),
                ('future_plans', models.TextField()),
                ('terms', models.BooleanField(default=False)),
                ('nda', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FreelanceProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('Development', 'Development'), ('Design', 'Design'), ('Marketing', 'Marketing'), ('Writing', 'Writing'), ('Data Entry', 'Data Entry'), ('Other', 'Other')], max_length=50)),
                ('description', models.TextField()),
                ('skills_required', models.TextField()),
                ('duration', models.CharField(choices=[('Less than 1 month', 'Less than 1 month'), ('1-3 months', '1-3 months')], max_length=50)),
                ('budget', models.CharField(max_length=50)),
                ('payment_terms', models.CharField(choices=[('Milestone-based', 'Milestone-based'), ('Hourly', 'Hourly'), ('Fixed-price', 'Fixed-price')], max_length=50)),
                ('experience_level', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Expert', 'Expert')], max_length=50)),
                ('location_preference', models.CharField(blank=True, max_length=200, null=True)),
                ('language_requirements', models.CharField(blank=True, max_length=200, null=True)),
                ('attachments', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('company_name', models.CharField(max_length=200)),
                ('company_description', models.TextField()),
                ('point_of_contact_name', models.CharField(max_length=100)),
                ('point_of_contact_email', models.EmailField(max_length=254)),
                ('point_of_contact_phone', models.CharField(max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FreelanceBid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('portfolio_links', models.TextField(help_text='Add your portfolio links (one per line)')),
                ('previous_works', models.TextField(help_text='Describe your relevant previous works')),
                ('expected_pay', models.DecimalField(decimal_places=2, max_digits=10)),
                ('timeline', models.CharField(max_length=100)),
                ('execution_plan', models.TextField(help_text='Describe how you plan to execute this project')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bidder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='users.freelanceproject')),
            ],
        ),
        migrations.CreateModel(
            name='IndividualProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('tagline', models.CharField(blank=True, max_length=255, null=True)),
                ('availability_status', models.CharField(choices=[('actively_looking', 'Actively Looking'), ('not_available', 'Not Available'), ('open_to_offers', 'Open to Offers')], default='open_to_offers', max_length=50)),
                ('about_me', models.TextField(blank=True, null=True)),
                ('key_skills', models.JSONField(blank=True, null=True)),
                ('industries_of_interest', models.JSONField(blank=True, null=True)),
                ('desired_role', models.CharField(blank=True, max_length=255, null=True)),
                ('desired_location', models.CharField(blank=True, max_length=255, null=True)),
                ('work_type', models.CharField(choices=[('remote', 'Remote'), ('hybrid', 'Hybrid'), ('on_site', 'On-Site')], default='remote', max_length=50)),
                ('salary_expected', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('current_position_title', models.CharField(blank=True, max_length=255, null=True)),
                ('current_company', models.CharField(blank=True, max_length=255, null=True)),
                ('current_duration', models.CharField(blank=True, max_length=255, null=True)),
                ('key_responsibilities', models.TextField(blank=True, null=True)),
                ('qualification', models.CharField(blank=True, max_length=255, null=True)),
                ('institution', models.CharField(blank=True, max_length=255, null=True)),
                ('year_of_completion', models.IntegerField(blank=True, null=True)),
                ('certifications', models.JSONField(blank=True, null=True)),
                ('projects', models.JSONField(blank=True, null=True)),
                ('awards', models.JSONField(blank=True, null=True)),
                ('publications', models.JSONField(blank=True, null=True)),
                ('hobbies', models.JSONField(blank=True, null=True)),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IndividualProfileUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Internship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('company', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('requirements', models.CharField(max_length=200)),
                ('salary', models.CharField(default='Not Specified', max_length=200)),
                ('duration', models.CharField(default='Not Specified', max_length=100)),
                ('posted_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('company_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('company', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('requirements', models.CharField(max_length=200)),
                ('salary', models.CharField(default='Not Specified', max_length=200)),
                ('posted_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('required_skills', models.TextField(default='', help_text='Enter required skills separated by commas')),
                ('min_experience', models.PositiveIntegerField(default=0)),
                ('required_qualification', models.CharField(choices=[('bachelor', 'Bachelors'), ('master', 'Masters'), ('phd', 'PhD'), ('diploma', 'Diploma')], default='bachelor', max_length=50)),
                ('company_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Unknown', max_length=255)),
                ('email', models.EmailField(default='example@example.com', max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('degree', models.CharField(max_length=50)),
                ('percentage', models.FloatField()),
                ('work_experience', models.PositiveIntegerField()),
                ('resume', models.FileField(upload_to='resumes/')),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('skills', models.TextField(default='', help_text='Enter your skills separated by commas')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.job')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('project_type', models.CharField(max_length=100)),
                ('industry', models.CharField(max_length=100)),
                ('budget', models.DecimalField(decimal_places=2, max_digits=15)),
                ('timeline', models.DateField()),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('expertise_required', models.TextField()),
                ('payment_terms', models.TextField()),
                ('nda_required', models.BooleanField(default=False)),
                ('confidentiality_required', models.BooleanField(default=False)),
                ('ip_rights_required', models.BooleanField(default=False)),
                ('custom_field', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SavedApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_match_score', models.FloatField(default=0.0)),
                ('matching_skills', models.TextField(blank=True, help_text='Comma-separated matching skills')),
                ('missing_skills', models.TextField(blank=True, help_text='Comma-separated missing skills')),
                ('category', models.CharField(default='Shortlisted', max_length=100)),
                ('saved_at', models.DateTimeField(auto_now_add=True)),
                ('job_application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.jobapplication')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LikeDislike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.BooleanField(default=False)),
                ('dislike', models.BooleanField(default=False)),
                ('idea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.idea')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'idea')},
            },
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Proposed Price')),
                ('payment_terms', models.TextField(blank=True, null=True, verbose_name='Payment Terms')),
                ('estimated_timeline', models.IntegerField(blank=True, help_text='Estimated days to complete', null=True)),
                ('preferred_start_date', models.DateField(blank=True, null=True)),
                ('project_approach', models.TextField(blank=True, null=True, verbose_name='Project Approach')),
                ('team_resources', models.TextField(blank=True, null=True, verbose_name='Team/Resources Description')),
                ('company_profile', models.TextField(blank=True, null=True, verbose_name='Company Profile')),
                ('portfolio_links', models.TextField(blank=True, null=True, verbose_name='Portfolio/Previous Work Links')),
                ('client_testimonials', models.TextField(blank=True, null=True, verbose_name='Client Testimonials/References')),
                ('minimum_budget_expectation', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Minimum Budget Expectation')),
                ('additional_details', models.TextField(blank=True, null=True)),
                ('proposal_document', models.FileField(blank=True, null=True, upload_to='bid_proposals/', verbose_name='Proposal Document')),
                ('custom_fields', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bidder', models.ForeignKey(limit_choices_to={'user_type': 'company'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='users.project')),
            ],
            options={
                'unique_together': {('project', 'bidder')},
            },
        ),
    ]
